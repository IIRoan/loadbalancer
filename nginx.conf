user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log debug;
pid /var/run/nginx.pid;

events {
    worker_connections 2048;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 300;
    types_hash_max_size 2048;
    server_tokens off;
    
    # IPv6 resolver configuration
    resolver [2001:4860:4860::8888] [2001:4860:4860::8844] valid=30s;
    resolver_timeout 10s;
    
    # Upstream configuration for Laravel with sticky sessions
    upstream laravel_backend {
        # Use ip_hash for sticky sessions based on client IP
        ip_hash;
        
        # Define your Laravel instances - using IPv6 addresses
        server [laravel-example.railway.internal]:8080 max_fails=3 fail_timeout=30s;
        
        # Add more instances if needed
        # server [laravel-example-2.railway.internal]:8080 max_fails=3 fail_timeout=30s;
        
        keepalive 64;
    }
    
    # HTTP server block
    server {
        listen 80 default_server;
        listen [::]:80 default_server ipv6only=on;
        
        server_name lunary.tech;
        
        # Redirect to HTTPS if needed
        # return 301 https://$host$request_uri;
        
        # Main location block
        location / {
            # IPv6 proxy pass
            proxy_pass http://laravel_backend;
            
            # Basic proxy settings
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cookie-based session persistence
            proxy_set_header Cookie $http_cookie;
            proxy_cookie_path / "/; HttpOnly; SameSite=Strict";
            
            # Forward the original protocol
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Buffering settings
            proxy_buffering on;
            proxy_buffer_size 256k;
            proxy_buffers 8 256k;
            proxy_busy_buffers_size 256k;
            proxy_temp_file_write_size 256k;
            
            # Don't close connections to upstream
            proxy_ignore_client_abort on;
            
            # Caching settings (adjust as needed)
            proxy_cache_bypass $http_upgrade;
            
            # WebSocket support if needed
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
        }
        
        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}